{"version":3,"sources":["components/HexInput.js","App.js","reportWebVitals.js","index.js"],"names":["HexInput","props","value","onChange","name","type","className","placeholder","App","onSubmit","evt","preventDefault","state","isWarning","color","result","hex","exec","shift","map","i","parseInt","join","test","target","this","setState","length","checkColor","convert","style","backgroundColor","bind","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAgBeA,G,MAdE,SAAAC,GAAU,IACjBC,EAAoBD,EAApBC,MAAOC,EAAaF,EAAbE,SAEf,OACE,uBACEC,KAAK,QACLF,MAAOA,EACPC,SAAUA,EACVE,KAAK,OACLC,UAAU,YACVC,YAAY,cC+DHC,E,kDAtEb,WAAYP,GAAQ,IAAD,8BACjB,cAAMA,IA4CRQ,SAAW,SAAAC,GACTA,EAAIC,kBA5CJ,EAAKC,MAAQ,CACXC,WAAW,EACXC,MAAO,GACPC,OAAQ,IALO,E,oDASXC,GACN,IAAMD,EAAS,4CAA4CE,KAAKD,GAChE,OAAKD,GAGLA,EAAOG,QACAH,EAAM,cAAUA,EAAOI,KAAI,SAAAC,GAAC,OAAIC,SAASD,EAAG,OAAKE,KAAK,MAAhD,KAA2D,MAH/D,O,iCAMAN,GACP,MAAO,oBAAoBO,KAAKP,K,+BAG3BN,GACP,IAAMM,EAAMN,EAAIc,OAAOtB,MACvBuB,KAAKC,SAAS,CAAEZ,MAAOE,IACJ,IAAfA,EAAIW,OACFF,KAAKG,WAAWZ,GAClBS,KAAKC,SAAS,CACZb,WAAW,EACXE,OAAQU,KAAKI,QAAQb,KAGvBS,KAAKC,SAAS,CACZb,WAAW,EACXE,OAAQ,0CAGY,IAAfC,EAAIW,QACbF,KAAKC,SAAS,CACZb,WAAW,EACXE,OAAQ,O,+BAUZ,IAAMd,EAAQ,GASd,OARMwB,KAAKb,MAAMC,UACbZ,EAAMK,UAAY,UACmB,IAA5BmB,KAAKb,MAAME,MAAMa,SAC1B1B,EAAM6B,MAAQ,CACZC,gBAAiBN,KAAKb,MAAME,QAKhC,iDAAUb,GAAV,IAAiBQ,SAAUgB,KAAKhB,SAAhC,UACE,cAAC,EAAD,CACEP,MAAOuB,KAAKb,MAAME,MAClBX,SAAUsB,KAAKtB,SAAS6B,KAAKP,QAC/B,qBAAKrB,KAAK,SAASE,UAAU,MAA7B,SAAoCmB,KAAKb,MAAMG,iB,GAjErCkB,IAAMC,WCQTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.120b5e97.chunk.js","sourcesContent":["import React from 'react';\n\nconst HexInput = props => {\n  const { value, onChange } = props;  \n\n  return (\n    <input\n      name=\"color\"\n      value={value}      \n      onChange={onChange}\n      type=\"text\"\n      className=\"hex-field\"\n      placeholder=\"#000000\" />\n  );\n};\n\nexport default HexInput;\n","import React from 'react';\nimport './App.css';\nimport HexInput from './components/HexInput'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isWarning: false,\n      color: \"\",\n      result: \"\"\n    };\n  }\n\n  convert(hex) {\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    if (!result) {\n      return null;\n    }\n    result.shift();\n    return result ? `rgb(${result.map(i => parseInt(i, 16)).join(', ')})` : null;\n  }\n\n  checkColor(hex) {\n      return /^#?([\\da-f]{6})$/i.test(hex);\n  }\n\n  onChange(evt) {\n    const hex = evt.target.value;\n    this.setState({ color: hex })\n    if (hex.length === 7) {      \n      if (this.checkColor(hex)) {\n        this.setState({\n          isWarning: false,\n          result: this.convert(hex)\n        })\n      } else {\n        this.setState({\n          isWarning: true,\n          result: 'Ошибка!'\n        })\n      }\n    } else if (hex.length !== 7) {\n      this.setState({\n        isWarning: false,\n        result: ''\n      })\n    }\n  }\n\n  onSubmit = evt => {\n    evt.preventDefault();\n  }\n  \n  render() {\n    const props = {};    \n      if (this.state.isWarning) {\n        props.className = 'warning';\n      } else if (this.state.color.length === 7) {\n        props.style = {\n          backgroundColor: this.state.color\n        };\n      }\n    \n    return (\n      <form {...props} onSubmit={this.onSubmit}>\n        <HexInput\n          value={this.state.color}\n          onChange={this.onChange.bind(this)} />\n        <div name=\"result\" className=\"rgb\">{this.state.result}</div>\n      </form>\n    );    \n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}